package chess

import "fmt"

type ChessBoardEvaluator struct {

}

var chessPieceValueMap = map[ChessType]int {
	CHESS_NULL: 0,
	CHESS_CAR: 100,
	CHESS_HORSE: 40,
	CHESS_CANNON: 45,
	CHESS_ELEPHANT: 20,
	CHESS_GUARD: 20,
	CHESS_KING: 1000,
	CHESS_PAWN: 10,
}

var chessPiecePositionValueMap = map[string][][]int {
	fmt.Sprintf("%d%d", CHESS_CAR, COLOR_RED): {
		{ 160, 170, 160, 150, 150, 150, 160, 170, 160 },
		{ 170, 180, 170, 190, 250, 190, 170, 180, 170 },
		{ 170, 190, 200, 220, 240, 220, 200, 190, 170 },
		{ 180, 220, 210, 240, 250, 240, 210, 220, 180 },
		{ 180, 220, 210, 240, 250, 240, 210, 220, 180 },
		{ 180, 220, 210, 240, 250, 240, 210, 220, 180 },
		{ 170, 190, 180, 220, 240, 220, 200, 190, 170 },
		{ 170, 180, 170, 170, 160, 170, 170, 180, 170 },
		{ 160, 170, 160, 160, 150, 160, 160, 170, 160 },
		{ 150, 160, 150, 160, 150, 160, 150, 160, 150 },
	},
	fmt.Sprintf("%d%d", CHESS_HORSE, COLOR_RED): {
		{ 70, 80,  90,  80,  70,  80,  90,  80,  70 },
		{ 80, 110, 125, 90,  70,  90,  125, 110, 80 },
		{ 90, 100, 120, 125, 120, 125, 120, 100, 90 },
		{ 90, 100, 120, 130, 110, 130, 120, 100, 90 },
		{ 90, 110, 110, 120, 100, 120, 110, 110, 90 },
		{ 90, 100, 100, 110, 100, 110, 100, 100, 90 },
		{ 80, 90,  100, 100, 90,  100, 100, 90,  80 },
		{ 80, 80,  90,  90,  80,  90,  90,  80,  80 },
		{ 70, 75,  75,  70,  50,  70,  75,  75,  70 },
		{ 60, 70,  75,  70,  60,  70,  75,  70,  60 },
	},
	fmt.Sprintf("%d%d", CHESS_CANNON, COLOR_RED): {
		{ 125, 130, 100, 70, 60, 70, 100, 130, 125 },
		{ 110, 125, 100, 70, 60, 70, 100, 125, 110 },
		{ 100, 120, 90,  80, 80, 80, 90,  120, 100 },
		{ 90,  110, 90, 110, 130, 110, 90, 110, 90 },
		{ 90,  110, 90, 110, 130, 110, 90, 110, 90 },
		{ 90,  100, 90, 110, 130, 110, 90, 100, 90 },
		{ 90,  100, 90, 90,  110, 90,  90, 100, 90 },
		{ 90,  100, 80, 80,  70,  80,  80, 100, 90 },
		{ 80, 90, 80, 70, 65, 70, 80, 90, 80 },
		{ 80, 90, 80, 70, 60, 70, 80, 90, 80 },
	},
	fmt.Sprintf("%d%d", CHESS_ELEPHANT, COLOR_RED): {
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 25, 0, 0, 0, 25, 0, 0},
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 20, 0, 0, 0, 35, 0, 0, 0, 20 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 30, 0, 0, 0, 30, 0, 0 },
	},
	fmt.Sprintf("%d%d", CHESS_GUARD, COLOR_RED): {
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 30, 0, 30, 0, 0, 0 },
		{ 0, 0, 0, 0, 22, 0, 0, 0, 0 },
		{ 0, 0, 0, 30, 0, 30, 0, 0, 0 },
	},
	fmt.Sprintf("%d%d", CHESS_KING, COLOR_RED): {
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 1, 1, 1, 0, 0, 0 },
		{ 0, 0, 0, 10, 10, 10, 0, 0, 0 },
		{ 0, 0, 0, 15, 20, 15, 0, 0, 0 },
	},
	fmt.Sprintf("%d%d", CHESS_PAWN, COLOR_RED): {
		{ 10, 10, 10, 20, 25, 20, 10, 10, 10 },
		{ 25, 30, 40, 50, 60, 50, 40, 30, 25 },
		{ 25, 30, 30, 40, 40, 40, 30, 30, 25 },
		{ 20, 25, 25, 30, 30, 30, 25, 25, 20 },
		{ 15, 20, 20, 20, 20, 20, 20, 20, 15 },
		{ 10, 0, 15, 0, 15, 0, 15, 0, 10 },
		{ 10, 0, 10, 0, 15, 0, 10, 0, 10 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
	},
	fmt.Sprintf("%d%d", CHESS_CAR, COLOR_BLACK): {
		{ 150, 160, 150, 160, 150, 160, 150, 160, 150 },
		{ 160, 170, 160, 160, 150, 160, 160, 170, 160 },
		{ 170, 180, 170, 170, 160, 170, 170, 180, 170 },
		{ 170, 190, 180, 220, 240, 220, 200, 190, 170 },
		{ 180, 220, 210, 240, 250, 240, 210, 220, 180 },
		{ 180, 220, 210, 240, 250, 240, 210, 220, 180 },
		{ 180, 220, 210, 240, 250, 240, 210, 220, 180 },
		{ 170, 190, 200, 220, 240, 220, 200, 190, 170 },
		{ 170, 180, 170, 190, 250, 190, 170, 180, 170 },
		{ 160, 170, 160, 150, 150, 150, 160, 170, 160 },
	},
	fmt.Sprintf("%d%d", CHESS_HORSE, COLOR_BLACK): {
		{ 60, 70,  75,  70,  60,  70,  75,  70,  60 },
		{ 70, 75,  75,  70,  50,  70,  75,  75,  70 },
		{ 80, 80,  90,  90,  80,  90,  90,  80,  80 },
		{ 80, 90,  100, 100, 90,  100, 100, 90,  80 },
		{ 90, 100, 100, 110, 100, 110, 100, 100, 90 },
		{ 90, 110, 110, 120, 100, 120, 110, 110, 90 },
		{ 90, 100, 120, 130, 110, 130, 120, 100, 90 },
		{ 90, 100, 120, 125, 120, 125, 120, 100, 90 },
		{ 80, 110, 125, 90,  70,  90,  125, 110, 80 },
		{ 70, 80,  90,  80,  70,  80,  90,  80,  70 },
	},
	fmt.Sprintf("%d%d", CHESS_CANNON, COLOR_BLACK): {
		{ 80, 90, 80, 70, 60, 70, 80, 90, 80 },
		{ 80, 90, 80, 70, 65, 70, 80, 90, 80 },
		{ 90,  100, 80, 80,  70,  80,  80, 100, 90 },
		{ 90,  100, 90, 90,  110, 90,  90, 100, 90 },
		{ 90,  100, 90, 110, 130, 110, 90, 100, 90 },
		{ 90,  110, 90, 110, 130, 110, 90, 110, 90 },
		{ 90,  110, 90, 110, 130, 110, 90, 110, 90 },
		{ 100, 120, 90,  80, 80, 80, 90,  120, 100 },
		{ 110, 125, 100, 70, 60, 70, 100, 125, 110 },
		{ 125, 130, 100, 70, 60, 70, 100, 130, 125 },
	},
	fmt.Sprintf("%d%d", CHESS_ELEPHANT, COLOR_BLACK): {
		{ 0, 0, 30, 0, 0, 0, 30, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 20, 0, 0, 0, 35, 0, 0, 0, 20 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 25, 0, 0, 0, 25, 0, 0},
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
	},
	fmt.Sprintf("%d%d", CHESS_GUARD, COLOR_BLACK): {
		{ 0, 0, 0, 30, 0, 30, 0, 0, 0 },
		{ 0, 0, 0, 0, 22, 0, 0, 0, 0 },
		{ 0, 0, 0, 30, 0, 30, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
	},
	fmt.Sprintf("%d%d", CHESS_KING, COLOR_BLACK): {
		{ 0, 0, 0, 15, 20, 15, 0, 0, 0 },
		{ 0, 0, 0, 10, 10, 10, 0, 0, 0 },
		{ 0, 0, 0, 1, 1, 1, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0},
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
	},
	fmt.Sprintf("%d%d", CHESS_PAWN, COLOR_BLACK): {
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 10, 0, 10, 1, 15, 0, 10, 0, 10 },
		{ 10, 0, 15, 0, 15, 0, 15, 0, 10 },
		{ 15, 20, 20, 20, 20, 20, 20, 20, 15 },
		{ 20, 25, 25, 30, 30, 30, 25, 25, 20 },
		{ 25, 30, 30, 40, 40, 40, 30, 30, 25 },
		{ 25, 30, 40, 50, 60, 50, 40, 30, 25 },
		{ 10, 10, 10, 20, 25, 20, 10, 10, 10 },
	},
}

func NewChessBoardEvaluator() *ChessBoardEvaluator {
	return &ChessBoardEvaluator{}
}

func (cbe *ChessBoardEvaluator) Eval(chessBoard ChessBoard) int {
	return cbe.evalValue(chessBoard, COLOR_BLACK) - cbe.evalValue(chessBoard, COLOR_RED)
}

func (cbe *ChessBoardEvaluator) evalValue(chessBoard ChessBoard, color ChessColor) int {
	return cbe.evalPieceValue(chessBoard, color) + cbe.evalPositionValue(chessBoard, color)
}

func (cbe *ChessBoardEvaluator) evalPieceValue(chessBoard ChessBoard, color ChessColor) int {
	result := 0
	for row := 0; row < BOARD_ROW; row++ {
		for col := 0; col < BOARD_COL; col++ {
			chess := chessBoard[row][col]
			if chess.Color == color {
				result += chessPieceValueMap[chess.Type]
			}
		}
	}
	return result
}

func (cbe *ChessBoardEvaluator) evalPositionValue(chessBoard ChessBoard, color ChessColor) int {
	result := 0
	for row := 0; row < BOARD_ROW; row++ {
		for col := 0; col < BOARD_COL; col++ {
			chess := chessBoard[row][col]
			if chess.Type != CHESS_NULL && chess.Color == color {
				result += chessPiecePositionValueMap[chess.String()][row][col]
			}
		}
	}
	return result
}

